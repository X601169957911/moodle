{"version":3,"sources":["../src/moremenu.js"],"names":["Selectors","regions","moredropdown","classes","dropdownitem","dropdownmoremenu","hidden","nav","navlink","observed","autoCollapse","menu","maxHeight","parentNode","offsetHeight","dropdownMenu","querySelector","dropdown","classList","remove","menuNodes","Array","from","children","reverse","forEach","item","contains","lastNode","removeChild","navLink","hasAttribute","setAttribute","prepend","add","currentAttribute","getAttribute","removeAttribute","insertBefore","window","console","log","addEventListener"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Moves wrapping navigation items into a more menu.\n *\n * @module     core/moremenu\n * @package    core\n * @copyright  2021 Moodle\n * @author     Bas Brands <bas@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {classUtil} from 'core/utils';\n\n/**\n * Moremenu selectors.\n */\nconst Selectors = {\n    regions: {\n        moredropdown: '[data-region=\"moredropdown\"]',\n    },\n    classes: {\n        dropdownitem: 'dropdown-item',\n        dropdownmoremenu: 'dropdownmoremenu',\n        hidden: 'd-none',\n        nav: 'nav',\n        navlink: 'nav-link',\n        observed: 'observed',\n    }\n};\n\n/**\n * Auto Collapse navigation items that wrap into a dropdown menu.\n *\n * @param {HTMLElement} menu The navbar container.\n */\nconst autoCollapse = menu => {\n\n    const maxHeight = menu.parentNode.offsetHeight + 1;\n\n    const dropdownMenu = menu.querySelector(Selectors.regions.moredropdown);\n    const dropdown = menu.querySelector('.' + Selectors.classes.dropdownmoremenu);\n\n    if (menu.offsetHeight > maxHeight) {\n\n        // Show the dropdown more menu.\n        dropdown.classList.remove(Selectors.classes.hidden);\n\n        if ('children' in menu) {\n            const menuNodes = Array.from(menu.children).reverse();\n            menuNodes.forEach(item => {\n                if (!item.classList.contains(Selectors.classes.dropdownmoremenu)) {\n                    if (menu.offsetHeight > maxHeight) {\n                        const lastNode = menu.removeChild(item);\n                        const navLink = lastNode.querySelector('.' + Selectors.classes.navlink);\n                        if (navLink && !navLink.hasAttribute('role')) {\n                            // Adding the menuitem role so the dropdown includes the\n                            // Accessibility improvements from theme/boost/amd/src/aria.js\n                            navLink.setAttribute('role', 'menuitem');\n                        }\n                        classUtil('replace', navLink, Selectors.classes.navlink, Selectors.classes.dropdownitem);\n                        dropdownMenu.prepend(lastNode);\n                    }\n                }\n            });\n        }\n    } else {\n\n        // Hide the dropdown more menu.\n        dropdown.classList.add(Selectors.classes.hidden);\n\n        if ('children' in dropdownMenu) {\n            const menuNodes = Array.from(dropdownMenu.children);\n            menuNodes.forEach(item => {\n                if (menu.offsetHeight < maxHeight) {\n                    const lastNode = dropdownMenu.removeChild(item);\n                    const navLink = lastNode.querySelector('.' + Selectors.classes.dropdownitem);\n                    if (navLink) {\n                        const currentAttribute = navLink.getAttribute('role');\n                        if (currentAttribute === 'menuitem') {\n                            navLink.removeAttribute('role');\n                        }\n                    }\n                    classUtil('replace', navLink, Selectors.classes.dropdownitem, Selectors.classes.navlink);\n                    menu.insertBefore(lastNode, dropdown);\n                }\n            });\n        }\n\n        if (menu.offsetHeight > maxHeight) {\n            window.console.log('looping' + menu.offsetHeight + ' > ' + maxHeight);\n            autoCollapse(menu);\n        }\n    }\n\n    // Unsure if the added abstraction here is really useful.\n    classUtil('add', menu.parentNode, Selectors.classes.observed);\n};\n\n/**\n * Initialise the more menus.\n *\n * @param {HTMLElement} menu The navbar moremenu.\n */\nexport default menu => {\n    autoCollapse(menu);\n    window.addEventListener('resize', () => {\n        autoCollapse(menu);\n    });\n};\n"],"file":"moremenu.min.js"}