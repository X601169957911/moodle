{"version":3,"sources":["../src/actions.js"],"names":["define","$","ajax","templates","notification","str","url","Y","ModalFactory","ModalEvents","KeyCodes","log","editor","componentActions","courseeditor","getCurrentCourseEditor","CSS","EDITINPROGRESS","SECTIONDRAGGABLE","EDITINGMOVE","SELECTOR","ACTIVITYLI","ACTIONAREA","ACTIVITYACTION","MENU","TOGGLE","SECTIONLI","SECTIONACTIONMENU","ADDSECTIONS","SECTIONBADGES","use","courseformatselector","M","course","format","get_section_selector","getModuleId","element","item","get","dataset","id","Moodle","core_course","util","cm","getId","Node","getModuleName","name","getName","state","cmid","addActivitySpinner","activity","addClass","actionarea","find","spinner","add_spinner","show","data","dispatch","addSectionSpinner","sectionelement","addSectionLightbox","lightbox","add_lightbox","removeSpinner","delay","window","setTimeout","removeClass","hide","mutation","removeLightbox","initActionMenu","elementid","coursebase","invoke_function","core","actionmenu","newDOMNode","one","focusActionItem","elementId","action","mainelement","selector","is","focus","findNextFocusable","mainElement","tabables","isInside","foundElement","each","contains","editModule","moduleElement","target","attr","promises","call","methodname","args","sectionreturn","closest","when","apply","done","elementToFocus","replaceWith","affectedids","index","push","trigger","Event","ajaxreturn","fail","ex","e","exception","isDefaultPrevented","refreshModule","activityElement","Promise","resolve","reject","replaceActivityHtmlWith","confirmDeleteModule","onconfirm","modtypename","match","modulename","get_string","pluginname","get_strings","key","param","type","s","confirm","confirmEditSection","message","replaceActionItem","actionitem","image","stringname","stringcomponent","newaction","component","then","strings","html","renderPix","pixhtml","catch","defaultEditSectionHandler","sectionElement","actionItem","courseformat","sectionid","setSectionBadge","modules","i","section_availability","first","section","oldmarker","oldActionItem","activityHTML","editSection","supportComponents","includes","dataencoded","parseJSON","badgetype","add","sectionbadges","querySelector","render","js","prependNodeContents","badge","remove","register_module","set_visibility_resource_ui","getDOMNode","updateMovedCmState","params","updateMovedSectionState","addMutations","legacyActivityAction","statemanager","setReadOnly","locked","cmlist","reduce","current","delete","visible","legacySectionAction","forEach","initCoursePage","on","keyCode","moduleId","preventDefault","sectionId","isExecuted","itemid","strNumberSections","modalTitle","newSections","modalBody","create","title","types","SAVE_CANCEL","body","modal","numSections","getBody","addSections","parseInt","val","document","location","setSaveButtonText","getRoot","shown","select","enter","save","replaceSectionActionItem","debug"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Various actions on modules and sections in the editing mode - hiding, duplicating, deleting, etc.\n *\n * @module     core_course/actions\n * @copyright  2016 Marina Glancy\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      3.3\n */\ndefine(['jquery', 'core/ajax', 'core/templates', 'core/notification', 'core/str', 'core/url', 'core/yui',\n        'core/modal_factory', 'core/modal_events', 'core/key_codes', 'core/log', 'core_courseformat/courseeditor'],\n    function($, ajax, templates, notification, str, url, Y, ModalFactory, ModalEvents, KeyCodes, log, editor) {\n\n        // Eventually, core_courseformat/local/content/actions will handle all actions for\n        // component compatible formats and the default actions.js won't be necessary anymore.\n        // Meanwhile, we filter the migrated actions.\n        const componentActions = ['moveSection', 'moveCm'];\n\n        // The course reactive instance.\n        const courseeditor = editor.getCurrentCourseEditor();\n\n        var CSS = {\n            EDITINPROGRESS: 'editinprogress',\n            SECTIONDRAGGABLE: 'sectiondraggable',\n            EDITINGMOVE: 'editing_move'\n        };\n        var SELECTOR = {\n            ACTIVITYLI: 'li.activity',\n            ACTIONAREA: '.actions',\n            ACTIVITYACTION: 'a.cm-edit-action',\n            MENU: '.moodle-actionmenu[data-enhance=moodle-core-actionmenu]',\n            TOGGLE: '.toggle-display,.dropdown-toggle',\n            SECTIONLI: 'li.section',\n            SECTIONACTIONMENU: '.section_action_menu',\n            ADDSECTIONS: '#changenumsections [data-add-sections]',\n            SECTIONBADGES: '[data-region=\"sectionbadges\"]',\n        };\n\n        Y.use('moodle-course-coursebase', function() {\n            var courseformatselector = M.course.format.get_section_selector();\n            if (courseformatselector) {\n                SELECTOR.SECTIONLI = courseformatselector;\n            }\n        });\n\n        /**\n         * Wrapper for Y.Moodle.core_course.util.cm.getId\n         *\n         * @param {JQuery} element\n         * @returns {Integer}\n         */\n        var getModuleId = function(element) {\n            // Check if we have a data-id first.\n            const item = element.get(0);\n            if (item.dataset.id) {\n                return item.dataset.id;\n            }\n            // Use YUI way if data-id is not present.\n            let id;\n            Y.use('moodle-course-util', function(Y) {\n                id = Y.Moodle.core_course.util.cm.getId(Y.Node(item));\n            });\n            return id;\n        };\n\n        /**\n         * Wrapper for Y.Moodle.core_course.util.cm.getName\n         *\n         * @param {JQuery} element\n         * @returns {String}\n         */\n        var getModuleName = function(element) {\n            var name;\n            Y.use('moodle-course-util', function(Y) {\n                name = Y.Moodle.core_course.util.cm.getName(Y.Node(element.get(0)));\n            });\n            // Check if we have the name in the course state.\n            const state = courseeditor.state;\n            const cmid = getModuleId(element);\n            if (!name && state && cmid) {\n                name = state.cm.get(cmid)?.name;\n            }\n            return name;\n        };\n\n        /**\n         * Wrapper for M.util.add_spinner for an activity\n         *\n         * @param {JQuery} activity\n         * @returns {Node}\n         */\n        var addActivitySpinner = function(activity) {\n            activity.addClass(CSS.EDITINPROGRESS);\n            var actionarea = activity.find(SELECTOR.ACTIONAREA).get(0);\n            if (actionarea) {\n                var spinner = M.util.add_spinner(Y, Y.Node(actionarea));\n                spinner.show();\n                // Lock the activity state element.\n                if (activity.data('id') !== undefined) {\n                    courseeditor.dispatch('cmLock', [activity.data('id')], true);\n                }\n                return spinner;\n            }\n            return null;\n        };\n\n        /**\n         * Wrapper for M.util.add_spinner for a section\n         *\n         * @param {JQuery} sectionelement\n         * @returns {Node}\n         */\n        var addSectionSpinner = function(sectionelement) {\n            sectionelement.addClass(CSS.EDITINPROGRESS);\n            var actionarea = sectionelement.find(SELECTOR.SECTIONACTIONMENU).get(0);\n            if (actionarea) {\n                var spinner = M.util.add_spinner(Y, Y.Node(actionarea));\n                spinner.show();\n                // Lock the section state element.\n                if (sectionelement.data('id') !== undefined) {\n                    courseeditor.dispatch('sectionLock', [sectionelement.data('id')], true);\n                }\n                return spinner;\n            }\n            return null;\n        };\n\n        /**\n         * Wrapper for M.util.add_lightbox\n         *\n         * @param {JQuery} sectionelement\n         * @returns {Node}\n         */\n        var addSectionLightbox = function(sectionelement) {\n            var lightbox = M.util.add_lightbox(Y, Y.Node(sectionelement.get(0)));\n            lightbox.show();\n            return lightbox;\n        };\n\n        /**\n         * Removes the spinner element\n         *\n         * @param {JQuery} element\n         * @param {Node} spinner\n         * @param {Number} delay\n         */\n        var removeSpinner = function(element, spinner, delay) {\n            window.setTimeout(function() {\n                element.removeClass(CSS.EDITINPROGRESS);\n                if (spinner) {\n                    spinner.hide();\n                }\n                // Unlock the state element.\n                if (element.data('id') !== undefined) {\n                    const mutation = (element.data('for') === 'section') ? 'sectionLock' : 'cmLock';\n                    courseeditor.dispatch(mutation, [element.data('id')], false);\n                }\n            }, delay);\n        };\n\n        /**\n         * Removes the lightbox element\n         *\n         * @param {Node} lightbox lighbox YUI element returned by addSectionLightbox\n         * @param {Number} delay\n         */\n        var removeLightbox = function(lightbox, delay) {\n            if (lightbox) {\n                window.setTimeout(function() {\n                    lightbox.hide();\n                }, delay);\n            }\n        };\n\n        /**\n         * Initialise action menu for the element (section or module)\n         *\n         * @param {String} elementid CSS id attribute of the element\n         */\n        var initActionMenu = function(elementid) {\n            // Initialise action menu in the new activity.\n            Y.use('moodle-course-coursebase', function() {\n                M.course.coursebase.invoke_function('setup_for_resource', '#' + elementid);\n            });\n            if (M.core.actionmenu && M.core.actionmenu.newDOMNode) {\n                M.core.actionmenu.newDOMNode(Y.one('#' + elementid));\n            }\n        };\n\n        /**\n         * Returns focus to the element that was clicked or \"Edit\" link if element is no longer visible.\n         *\n         * @param {String} elementId CSS id attribute of the element\n         * @param {String} action data-action property of the element that was clicked\n         */\n        var focusActionItem = function(elementId, action) {\n            var mainelement = $('#' + elementId);\n            var selector = '[data-action=' + action + ']';\n            if (action === 'groupsseparate' || action === 'groupsvisible' || action === 'groupsnone') {\n                // New element will have different data-action.\n                selector = '[data-action=groupsseparate],[data-action=groupsvisible],[data-action=groupsnone]';\n            }\n            if (mainelement.find(selector).is(':visible')) {\n                mainelement.find(selector).focus();\n            } else {\n                // Element not visible, focus the \"Edit\" link.\n                mainelement.find(SELECTOR.MENU).find(SELECTOR.TOGGLE).focus();\n            }\n        };\n\n        /**\n         * Find next <a> after the element\n         *\n         * @param {JQuery} mainElement element that is about to be deleted\n         * @returns {JQuery}\n         */\n        var findNextFocusable = function(mainElement) {\n            var tabables = $(\"a:visible\");\n            var isInside = false;\n            var foundElement = null;\n            tabables.each(function() {\n                if ($.contains(mainElement[0], this)) {\n                    isInside = true;\n                } else if (isInside) {\n                    foundElement = this;\n                    return false; // Returning false in .each() is equivalent to \"break;\" inside the loop in php.\n                }\n            });\n            return foundElement;\n        };\n\n        /**\n         * Performs an action on a module (moving, deleting, duplicating, hiding, etc.)\n         *\n         * @param {JQuery} moduleElement activity element we perform action on\n         * @param {Number} cmid\n         * @param {JQuery} target the element (menu item) that was clicked\n         */\n        var editModule = function(moduleElement, cmid, target) {\n            var action = target.attr('data-action');\n            var spinner = addActivitySpinner(moduleElement);\n            var promises = ajax.call([{\n                methodname: 'core_course_edit_module',\n                args: {id: cmid,\n                    action: action,\n                    sectionreturn: target.attr('data-sectionreturn') ? target.attr('data-sectionreturn') : 0\n                }\n            }], true);\n\n            var lightbox;\n            if (action === 'duplicate') {\n                lightbox = addSectionLightbox(target.closest(SELECTOR.SECTIONLI));\n            }\n            $.when.apply($, promises)\n                .done(function(data) {\n                    var elementToFocus = findNextFocusable(moduleElement);\n                    moduleElement.replaceWith(data);\n                    let affectedids = [];\n                    // Initialise action menu for activity(ies) added as a result of this.\n                    $('<div>' + data + '</div>').find(SELECTOR.ACTIVITYLI).each(function(index) {\n                        initActionMenu($(this).attr('id'));\n                        if (index === 0) {\n                            focusActionItem($(this).attr('id'), action);\n                            elementToFocus = null;\n                        }\n                        // Save any activity id in cmids.\n                        affectedids.push(getModuleId($(this)));\n                    });\n                    // In case of activity deletion focus the next focusable element.\n                    if (elementToFocus) {\n                        elementToFocus.focus();\n                    }\n                    // Remove spinner and lightbox with a delay.\n                    removeSpinner(moduleElement, spinner, 400);\n                    removeLightbox(lightbox, 400);\n                    // Trigger event that can be observed by course formats.\n                    moduleElement.trigger($.Event('coursemoduleedited', {ajaxreturn: data, action: action}));\n\n                    // Modify cm state.\n                    courseeditor.dispatch('legacyActivityAction', action, cmid, affectedids);\n\n                }).fail(function(ex) {\n                    // Remove spinner and lightbox.\n                    removeSpinner(moduleElement, spinner);\n                    removeLightbox(lightbox);\n                    // Trigger event that can be observed by course formats.\n                    var e = $.Event('coursemoduleeditfailed', {exception: ex, action: action});\n                    moduleElement.trigger(e);\n                    if (!e.isDefaultPrevented()) {\n                        notification.exception(ex);\n                    }\n                });\n        };\n\n        /**\n         * Requests html for the module via WS core_course_get_module and updates the module on the course page\n         *\n         * Used after d&d of the module to another section\n         *\n         * @param {JQuery|Element} element\n         * @param {Number} cmid\n         * @param {Number} sectionreturn\n         * @return {Promise} the refresh promise\n         */\n        var refreshModule = function(element, cmid, sectionreturn) {\n            const activityElement = $(element);\n            var spinner = addActivitySpinner(activityElement);\n            var promises = ajax.call([{\n                methodname: 'core_course_get_module',\n                args: {id: cmid, sectionreturn: sectionreturn}\n            }], true);\n\n            return new Promise((resolve, reject) => {\n                $.when.apply($, promises)\n                    .done(function(data) {\n                        removeSpinner(activityElement, spinner, 400);\n                        replaceActivityHtmlWith(data);\n                        resolve(data);\n                    }).fail(function() {\n                        removeSpinner(activityElement, spinner);\n                        reject();\n                    });\n            });\n        };\n\n        /**\n         * Displays the delete confirmation to delete a module\n         *\n         * @param {JQuery} mainelement activity element we perform action on\n         * @param {function} onconfirm function to execute on confirm\n         */\n        var confirmDeleteModule = function(mainelement, onconfirm) {\n            var modtypename = mainelement.attr('class').match(/modtype_([^\\s]*)/)[1];\n            var modulename = getModuleName(mainelement);\n\n            str.get_string('pluginname', modtypename).done(function(pluginname) {\n                var plugindata = {\n                    type: pluginname,\n                    name: modulename\n                };\n                str.get_strings([\n                    {key: 'confirm'},\n                    {key: modulename === null ? 'deletechecktype' : 'deletechecktypename', param: plugindata},\n                    {key: 'yes'},\n                    {key: 'no'}\n                ]).done(function(s) {\n                        notification.confirm(s[0], s[1], s[2], s[3], onconfirm);\n                    }\n                );\n            });\n        };\n\n        /**\n         * Displays the delete confirmation to delete a section\n         *\n         * @param {String} message confirmation message\n         * @param {function} onconfirm function to execute on confirm\n         */\n        var confirmEditSection = function(message, onconfirm) {\n            str.get_strings([\n                {key: 'confirm'}, // TODO link text\n                {key: 'yes'},\n                {key: 'no'}\n            ]).done(function(s) {\n                    notification.confirm(s[0], message, s[1], s[2], onconfirm);\n                }\n            );\n        };\n\n        /**\n         * Replaces an action menu item with another one (for example Show->Hide, Set marker->Remove marker)\n         *\n         * @param {JQuery} actionitem\n         * @param {String} image new image name (\"i/show\", \"i/hide\", etc.)\n         * @param {String} stringname new string for the action menu item\n         * @param {String} stringcomponent\n         * @param {String} newaction new value for data-action attribute of the link\n         * @return {Promise} promise which is resolved when the replacement has completed\n         */\n        var replaceActionItem = function(actionitem, image, stringname,\n                                           stringcomponent, newaction) {\n\n            var stringRequests = [{key: stringname, component: stringcomponent}];\n            // Do not provide an icon with duplicate, different text to the menu item.\n\n            return str.get_strings(stringRequests).then(function(strings) {\n                actionitem.find('span.menu-action-text').html(strings[0]);\n\n                return templates.renderPix(image, 'core');\n            }).then(function(pixhtml) {\n                actionitem.find('.icon').replaceWith(pixhtml);\n                actionitem.attr('data-action', newaction);\n                return;\n            }).catch(notification.exception);\n        };\n\n        /**\n         * Default post-processing for section AJAX edit actions.\n         *\n         * This can be overridden in course formats by listening to event coursesectionedited:\n         *\n         * $('body').on('coursesectionedited', 'li.section', function(e) {\n         *     var action = e.action,\n         *         sectionElement = $(e.target),\n         *         data = e.ajaxreturn;\n         *     // ... Do some processing here.\n         *     e.preventDefault(); // Prevent default handler.\n         * });\n         *\n         * @param {JQuery} sectionElement\n         * @param {JQuery} actionItem\n         * @param {Object} data\n         * @param {String} courseformat\n         * @param {Number} sectionid\n         */\n        var defaultEditSectionHandler = function(sectionElement, actionItem, data, courseformat, sectionid) {\n            var action = actionItem.attr('data-action');\n            if (action === 'hide' || action === 'show') {\n                if (action === 'hide') {\n                    sectionElement.addClass('hidden');\n                    setSectionBadge(sectionElement[0], 'hiddenfromstudents', true);\n                    replaceActionItem(actionItem, 'i/show',\n                        'showfromothers', 'format_' + courseformat, 'show');\n                } else {\n                    setSectionBadge(sectionElement[0], 'hiddenfromstudents', false);\n                    sectionElement.removeClass('hidden');\n                    replaceActionItem(actionItem, 'i/hide',\n                        'hidefromothers', 'format_' + courseformat, 'hide');\n                }\n                // Replace the modules with new html (that indicates that they are now hidden or not hidden).\n                if (data.modules !== undefined) {\n                    for (var i in data.modules) {\n                        replaceActivityHtmlWith(data.modules[i]);\n                    }\n                }\n                // Replace the section availability information.\n                if (data.section_availability !== undefined) {\n                    sectionElement.find('.section_availability').first().replaceWith(data.section_availability);\n                }\n                // Modify course state.\n                const section = courseeditor.state.section.get(sectionid);\n                if (section !== undefined) {\n                    courseeditor.dispatch('sectionState', [sectionid]);\n                }\n            } else if (action === 'setmarker') {\n                var oldmarker = $(SELECTOR.SECTIONLI + '.current'),\n                    oldActionItem = oldmarker.find(SELECTOR.SECTIONACTIONMENU + ' ' + 'a[data-action=removemarker]');\n                oldmarker.removeClass('current');\n                replaceActionItem(oldActionItem, 'i/marker',\n                    'highlight', 'core', 'setmarker');\n                sectionElement.addClass('current');\n                replaceActionItem(actionItem, 'i/marked',\n                    'highlightoff', 'core', 'removemarker');\n                courseeditor.dispatch('legacySectionAction', action, sectionid);\n                setSectionBadge(sectionElement[0], 'highlighted', true);\n            } else if (action === 'removemarker') {\n                sectionElement.removeClass('current');\n                replaceActionItem(actionItem, 'i/marker',\n                    'highlight', 'core', 'setmarker');\n                courseeditor.dispatch('legacySectionAction', action, sectionid);\n                setSectionBadge(sectionElement[0], 'highlighted', false);\n            }\n        };\n\n        /**\n         * Replaces the course module with the new html (used to update module after it was edited or its visibility was changed).\n         *\n         * @param {String} activityHTML\n         */\n        var replaceActivityHtmlWith = function(activityHTML) {\n            $('<div>' + activityHTML + '</div>').find(SELECTOR.ACTIVITYLI).each(function() {\n                // Extract id from the new activity html.\n                var id = $(this).attr('id');\n                // Find the existing element with the same id and replace its contents with new html.\n                $(SELECTOR.ACTIVITYLI + '#' + id).replaceWith(activityHTML);\n                // Initialise action menu.\n                initActionMenu(id);\n            });\n        };\n\n        /**\n         * Performs an action on a module (moving, deleting, duplicating, hiding, etc.)\n         *\n         * @param {JQuery} sectionElement section element we perform action on\n         * @param {Nunmber} sectionid\n         * @param {JQuery} target the element (menu item) that was clicked\n         * @param {String} courseformat\n         * @return {boolean} true the action call is sent to the server or false if it is ignored.\n         */\n        var editSection = function(sectionElement, sectionid, target, courseformat) {\n            var action = target.attr('data-action'),\n                sectionreturn = target.attr('data-sectionreturn') ? target.attr('data-sectionreturn') : 0;\n\n            // Filter direct component handled actions.\n            if (courseeditor.supportComponents && componentActions.includes(action)) {\n                return false;\n            }\n\n            var spinner = addSectionSpinner(sectionElement);\n            var promises = ajax.call([{\n                methodname: 'core_course_edit_section',\n                args: {id: sectionid, action: action, sectionreturn: sectionreturn}\n            }], true);\n\n            var lightbox = addSectionLightbox(sectionElement);\n            $.when.apply($, promises)\n                .done(function(dataencoded) {\n                    var data = $.parseJSON(dataencoded);\n                    removeSpinner(sectionElement, spinner);\n                    removeLightbox(lightbox);\n                    sectionElement.find(SELECTOR.SECTIONACTIONMENU).find(SELECTOR.TOGGLE).focus();\n                    // Trigger event that can be observed by course formats.\n                    var e = $.Event('coursesectionedited', {ajaxreturn: data, action: action});\n                    sectionElement.trigger(e);\n                    if (!e.isDefaultPrevented()) {\n                        defaultEditSectionHandler(sectionElement, target, data, courseformat, sectionid);\n                    }\n                }).fail(function(ex) {\n                    // Remove spinner and lightbox.\n                    removeSpinner(sectionElement, spinner);\n                    removeLightbox(lightbox);\n                    // Trigger event that can be observed by course formats.\n                    var e = $.Event('coursesectioneditfailed', {exception: ex, action: action});\n                    sectionElement.trigger(e);\n                    if (!e.isDefaultPrevented()) {\n                        notification.exception(ex);\n                    }\n                });\n            return true;\n        };\n\n        /**\n         * Sets the section badge in the section header.\n         *\n         * @param {JQuery} sectionElement section element we perform action on\n         * @param {String} badgetype the type of badge this is for\n         * @param {bool} add true to add, false to remove\n         */\n        var setSectionBadge = function(sectionElement, badgetype, add) {\n            const sectionbadges = sectionElement.querySelector(SELECTOR.SECTIONBADGES);\n            if (!sectionbadges) {\n                return;\n            }\n            if (add) {\n                templates.render('core_courseformat/local/content/section/badges', {[badgetype]: 1})\n                .then(function(html, js) {\n                    templates.prependNodeContents(sectionbadges, html, js);\n                    return true;\n                }).catch(notification.exception);\n            } else {\n                const badge = sectionbadges.querySelector('[data-type=\"' + badgetype + '\"]');\n                badge.remove();\n            }\n        };\n\n        // Register a function to be executed after D&D of an activity.\n        Y.use('moodle-course-coursebase', function() {\n            M.course.coursebase.register_module({\n                // Ignore camelcase eslint rule for the next line because it is an expected name of the callback.\n                // eslint-disable-next-line camelcase\n                set_visibility_resource_ui: function(args) {\n                    var mainelement = $(args.element.getDOMNode());\n                    var cmid = getModuleId(mainelement);\n                    if (cmid) {\n                        var sectionreturn = mainelement.find('.' + CSS.EDITINGMOVE).attr('data-sectionreturn');\n                        refreshModule(mainelement, cmid, sectionreturn);\n                    }\n                },\n                /**\n                 * Update the course state when some cm is moved via YUI.\n                 * @param {*} params\n                 */\n                updateMovedCmState: (params) => {\n                    const state = courseeditor.state;\n\n                    // Update old section.\n                    const cm = state.cm.get(params.cmid);\n                    if (cm !== undefined) {\n                        courseeditor.dispatch('sectionState', [cm.sectionid]);\n                    }\n                    // Update cm state.\n                    courseeditor.dispatch('cmState', [params.cmid]);\n                },\n                /**\n                 * Update the course state when some section is moved via YUI.\n                 */\n                updateMovedSectionState: () => {\n                    courseeditor.dispatch('courseState');\n                },\n            });\n        });\n\n        // From Moodle 4.0 all edit actions are being re-implemented as state mutation.\n        // This means all method from this \"actions\" module will be deprecated when all the course\n        // interface is migrated to reactive components.\n        // Most legacy actions did not provide enough information to regenarate the course so they\n        // use the mutations courseState, sectionState and cmState to get the updated state from\n        // the server. However, some activity actions where we can prevent an extra webservice\n        // call by implementing an adhoc mutation.\n        courseeditor.addMutations({\n            /**\n             * Compatibility function to update Moodle 4.0 course state using legacy actions.\n             *\n             * This method only updates some actions which does not require to use cmState mutation\n             * to get updated data form the server.\n             *\n             * @param {Object} statemanager the current state in read write mode\n             * @param {String} action the performed action\n             * @param {Number} cmid the affected course module id\n             * @param {Array} affectedids all affected cm ids (for duplicate action)\n             */\n            legacyActivityAction: function(statemanager, action, cmid, affectedids) {\n\n                const state = statemanager.state;\n                const cm = state.cm.get(cmid);\n                if (cm === undefined) {\n                    return;\n                }\n                const section = state.section.get(cm.sectionid);\n                if (section === undefined) {\n                    return;\n                }\n\n                // Send the element is locked. Reactive events are only triggered when the state\n                // read only mode is restored. We want to notify the interface the element is\n                // locked so we need to do a quick lock operation before performing the rest\n                // of the mutation.\n                statemanager.setReadOnly(false);\n                cm.locked = true;\n                statemanager.setReadOnly(true);\n\n                // Now we do the real mutation.\n                statemanager.setReadOnly(false);\n\n                // This locked will take effect when the read only is restored.\n                cm.locked = false;\n\n                switch (action) {\n                    case 'delete':\n                        // Remove from section.\n                        section.cmlist = section.cmlist.reduce(\n                            (cmlist, current) => {\n                                if (current != cmid) {\n                                    cmlist.push(current);\n                                }\n                                return cmlist;\n                            },\n                            []\n                        );\n                        // Delete form list.\n                        state.cm.delete(cmid);\n                        break;\n\n                    case 'hide':\n                    case 'show':\n                        cm.visible = (action === 'show') ? true : false;\n                        break;\n\n                    case 'duplicate':\n                        // Duplicate requires to get extra data from the server.\n                        courseeditor.dispatch('cmState', affectedids);\n                        break;\n                }\n                statemanager.setReadOnly(true);\n            },\n            legacySectionAction: function(statemanager, action, sectionid) {\n\n                const state = statemanager.state;\n                const section = state.section.get(sectionid);\n                if (section === undefined) {\n                    return;\n                }\n\n                // Send the element is locked. Reactive events are only triggered when the state\n                // read only mode is restored. We want to notify the interface the element is\n                // locked so we need to do a quick lock operation before performing the rest\n                // of the mutation.\n                statemanager.setReadOnly(false);\n                section.locked = true;\n                statemanager.setReadOnly(true);\n\n                // Now we do the real mutation.\n                statemanager.setReadOnly(false);\n\n                // This locked will take effect when the read only is restored.\n                section.locked = false;\n\n                switch (action) {\n                    case 'setmarker':\n                        // Remove previous marker.\n                        state.section.forEach((current) => {\n                            if (current.id != sectionid) {\n                                current.current = false;\n                            }\n                        });\n                        section.current = true;\n                        break;\n\n                    case 'removemarker':\n                        section.current = false;\n                        break;\n                }\n                statemanager.setReadOnly(true);\n            },\n        });\n\n        return /** @alias module:core_course/actions */ {\n\n            /**\n             * Initialises course page\n             *\n             * @method init\n             * @param {String} courseformat name of the current course format (for fetching strings)\n             */\n            initCoursePage: function(courseformat) {\n\n                // Add a handler for course module actions.\n                $('body').on('click keypress', SELECTOR.ACTIVITYLI + ' ' +\n                        SELECTOR.ACTIVITYACTION + '[data-action]', function(e) {\n                    if (e.type === 'keypress' && e.keyCode !== 13) {\n                        return;\n                    }\n                    var actionItem = $(this),\n                        moduleElement = actionItem.closest(SELECTOR.ACTIVITYLI),\n                        action = actionItem.attr('data-action'),\n                        moduleId = getModuleId(moduleElement);\n                    switch (action) {\n                        case 'moveleft':\n                        case 'moveright':\n                        case 'delete':\n                        case 'duplicate':\n                        case 'hide':\n                        case 'stealth':\n                        case 'show':\n                        case 'groupsseparate':\n                        case 'groupsvisible':\n                        case 'groupsnone':\n                            break;\n                        default:\n                            // Nothing to do here!\n                            return;\n                    }\n                    if (!moduleId) {\n                        return;\n                    }\n                    e.preventDefault();\n                    if (action === 'delete') {\n                        // Deleting requires confirmation.\n                        confirmDeleteModule(moduleElement, function() {\n                            editModule(moduleElement, moduleId, actionItem);\n                        });\n                    } else {\n                        editModule(moduleElement, moduleId, actionItem);\n                    }\n                });\n\n                // Add a handler for section show/hide actions.\n                $('body').on('click keypress', SELECTOR.SECTIONLI + ' ' +\n                            SELECTOR.SECTIONACTIONMENU + '[data-sectionid] ' +\n                            'a[data-action]', function(e) {\n                    if (e.type === 'keypress' && e.keyCode !== 13) {\n                        return;\n                    }\n                    var actionItem = $(this),\n                        sectionElement = actionItem.closest(SELECTOR.SECTIONLI),\n                        sectionId = actionItem.closest(SELECTOR.SECTIONACTIONMENU).attr('data-sectionid');\n\n                    let isExecuted = true;\n                    if (actionItem.attr('data-confirm')) {\n                        // Action requires confirmation.\n                        confirmEditSection(actionItem.attr('data-confirm'), function() {\n                            isExecuted = editSection(sectionElement, sectionId, actionItem, courseformat);\n                        });\n                    } else {\n                        isExecuted = editSection(sectionElement, sectionId, actionItem, courseformat);\n                    }\n                    // Prevent any other module from capturing the action if it is already in execution.\n                    if (isExecuted) {\n                        e.preventDefault();\n                    }\n                });\n\n                // The section and activity names are edited using inplace editable.\n                // The \"update\" jQuery event must be captured in order to update the course state.\n                $('body').on('updated', `${SELECTOR.SECTIONLI} [data-inplaceeditable]`, function(e) {\n                    if (e.ajaxreturn && e.ajaxreturn.itemid) {\n                        const state = courseeditor.state;\n                        const section = state.section.get(e.ajaxreturn.itemid);\n                        if (section !== undefined) {\n                            courseeditor.dispatch('sectionState', [e.ajaxreturn.itemid]);\n                        }\n                    }\n                });\n                $('body').on('updated', `${SELECTOR.ACTIVITYLI} [data-inplaceeditable]`, function(e) {\n                    if (e.ajaxreturn && e.ajaxreturn.itemid) {\n                        courseeditor.dispatch('cmState', [e.ajaxreturn.itemid]);\n                    }\n                });\n\n                // Add a handler for \"Add sections\" link to ask for a number of sections to add.\n                str.get_string('numberweeks').done(function(strNumberSections) {\n                    var trigger = $(SELECTOR.ADDSECTIONS),\n                        modalTitle = trigger.attr('data-add-sections'),\n                        newSections = trigger.attr('data-new-sections');\n                    var modalBody = $('<div><label for=\"add_section_numsections\"></label> ' +\n                        '<input id=\"add_section_numsections\" type=\"number\" min=\"1\" max=\"' + newSections + '\" value=\"1\"></div>');\n                    modalBody.find('label').html(strNumberSections);\n                    ModalFactory.create({\n                        title: modalTitle,\n                        type: ModalFactory.types.SAVE_CANCEL,\n                        body: modalBody.html()\n                    }, trigger)\n                    .done(function(modal) {\n                        var numSections = $(modal.getBody()).find('#add_section_numsections'),\n                        addSections = function() {\n                            // Check if value of the \"Number of sections\" is a valid positive integer and redirect\n                            // to adding a section script.\n                            if ('' + parseInt(numSections.val()) === numSections.val() && parseInt(numSections.val()) >= 1) {\n                                document.location = trigger.attr('href') + '&numsections=' + parseInt(numSections.val());\n                            }\n                        };\n                        modal.setSaveButtonText(modalTitle);\n                        modal.getRoot().on(ModalEvents.shown, function() {\n                            // When modal is shown focus and select the input and add a listener to keypress of \"Enter\".\n                            numSections.focus().select().on('keydown', function(e) {\n                                if (e.keyCode === KeyCodes.enter) {\n                                    addSections();\n                                }\n                            });\n                        });\n                        modal.getRoot().on(ModalEvents.save, function(e) {\n                            // When modal \"Add\" button is pressed.\n                            e.preventDefault();\n                            addSections();\n                        });\n                    });\n                });\n            },\n\n            /**\n             * Replaces a section action menu item with another one (for example Show->Hide, Set marker->Remove marker)\n             *\n             * This method can be used by course formats in their listener to the coursesectionedited event\n             *\n             * @deprecated since Moodle 3.9\n             * @param {JQuery} sectionelement\n             * @param {String} selector CSS selector inside the section element, for example \"a[data-action=show]\"\n             * @param {String} image new image name (\"i/show\", \"i/hide\", etc.)\n             * @param {String} stringname new string for the action menu item\n             * @param {String} stringcomponent\n             * @param {String} newaction new value for data-action attribute of the link\n             */\n            replaceSectionActionItem: function(sectionelement, selector, image, stringname,\n                                                    stringcomponent, newaction) {\n                log.debug('replaceSectionActionItem() is deprecated and will be removed.');\n                var actionitem = sectionelement.find(SELECTOR.SECTIONACTIONMENU + ' ' + selector);\n                replaceActionItem(actionitem, image, stringname, stringcomponent, newaction);\n            },\n            // Method to refresh a module.\n            refreshModule,\n        };\n    });\n"],"file":"actions.min.js"}